"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2155],{3905:(e,t,n)=>{n.d(t,{Zo:()=>g,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},g=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},l="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),l=s(n),h=r,d=l["".concat(c,".").concat(h)]||l[h]||p[h]||i;return n?a.createElement(d,u(u({ref:t},g),{},{components:n})):a.createElement(d,u({ref:t},g))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,u=new Array(i);u[0]=h;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[l]="string"==typeof e?e:r,u[1]=o;for(var s=2;s<i;s++)u[s]=n[s];return a.createElement.apply(null,u)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},7121:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={slug:"Hugging-Push",title:"\u53d1\u5e03\u4e00\u4e2a\u5f00\u6e90\u5c0f\u9879\u76ee - Hugging Push",authors:["backendcloud"],tags:["CICD"]},u=void 0,o={permalink:"/blog/Hugging-Push",editUrl:"https://github.com/backendcloud/backendcloud.github.io/tree/main/blog/2023-04-24-Hugging-Push.md",source:"@site/blog/2023-04-24-Hugging-Push.md",title:"\u53d1\u5e03\u4e00\u4e2a\u5f00\u6e90\u5c0f\u9879\u76ee - Hugging Push",description:"Hugging Push\u7684Github\u5e02\u573a\u7684URL\uff1a https://github.com/marketplace/actions/hugging-push",date:"2023-04-24T00:00:00.000Z",formattedDate:"2023\u5e744\u670824\u65e5",tags:[{label:"CICD",permalink:"/blog/tags/cicd"}],readingTime:2.565,hasTruncateMarker:!1,authors:[{name:"backendcloud",title:"\u540e\u7aef\u4e91",url:"https://www.backendcloud.cn",imageURL:"https://avatars.githubusercontent.com/u/15382060?v=4",key:"backendcloud"}],frontMatter:{slug:"Hugging-Push",title:"\u53d1\u5e03\u4e00\u4e2a\u5f00\u6e90\u5c0f\u9879\u76ee - Hugging Push",authors:["backendcloud"],tags:["CICD"]},prevItem:{title:"\u53d1\u5e03\u4e00\u4e2a\u5f00\u6e90\u5c0f\u9879\u76ee - \u8bed\u97f3\u52a9\u624b",permalink:"/blog/voice-assistant"},nextItem:{title:"\u53d1\u5e03\u4e00\u4e2a\u5f00\u6e90\u5c0f\u9879\u76ee - GUI\u7248\u7684ChatGPT API",permalink:"/blog/GUI-ChatGPT"}},c={authorsImageUrls:[void 0]},s=[{value:"\u9700\u6c42\u80cc\u666f",id:"\u9700\u6c42\u80cc\u666f",level:2},{value:"Hugging Push\u5b9e\u73b0\u7684\u529f\u80fd",id:"hugging-push\u5b9e\u73b0\u7684\u529f\u80fd",level:2},{value:"\u4f7f\u7528\u65b9\u6cd5",id:"\u4f7f\u7528\u65b9\u6cd5",level:2}],g={toc:s},l="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(l,(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Hugging Push\u7684Github\u5e02\u573a\u7684URL\uff1a ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/marketplace/actions/hugging-push"},"https://github.com/marketplace/actions/hugging-push")),(0,r.kt)("p",null,"Hugging Push\u9879\u76ee\u7684\u4ee3\u7801\u4ed3\u5e93\uff1a ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/backendcloud/hugging-push"},"https://github.com/backendcloud/hugging-push")),(0,r.kt)("p",null,"\u6216\u8005\u76f4\u63a5\u5728Github\u5e02\u573a\u641c\u7d22\u9879\u76ee\u540d\u79f0 Hugging Push"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://cdn.jsdelivr.net/gh/filess/img11@main/2023/04/24/1682337591710-bd51f152-164f-480b-9165-d39cd1d66a44.png",alt:null})),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://cdn.jsdelivr.net/gh/filess/img19@main/2023/04/24/1682337613153-9ec1a337-4dfa-4d96-9be5-dd71a650cd06.png",alt:null})),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://cdn.jsdelivr.net/gh/filess/img4@main/2023/04/24/1682337591712-4b9ad01c-5580-4e37-b925-4f6dae6b90d2.png",alt:null})),(0,r.kt)("h2",{id:"\u9700\u6c42\u80cc\u666f"},"\u9700\u6c42\u80cc\u666f"),(0,r.kt)("p",null,"\u505a\u901a\u7528\u4eba\u5de5\u667a\u80fd\u76f8\u5173\u7684\u9879\u76ee\u7684\u5f00\u53d1\uff0c\u5f80\u5f80\u9700\u8981\u7528\u5230hugging face\uff0chugging face\u4e3a\u4eba\u5de5\u667a\u80fd\u9879\u76ee\u63d0\u4f9b\u514d\u8d39\u76842\u6838cpu\u7b97\u529b\uff0c\u6536\u8d39\u7684GPU\u7b97\u529b\u548c\u66f4\u591a\u6838\u7684CPU\u7b97\u529b\u3002\u9700\u8981\u5c06\u9879\u76ee\u4ee3\u7801\u653e\u5230hugging face\u7684\u4ee3\u7801\u4ed3\u5e93\uff0c\u624d\u80fd\u5728hugging face\u5e73\u53f0\u7f16\u8bd1\u8fd0\u884c\u3002\u4f46\u4e00\u822c\u4ee3\u7801\u90fd\u662f\u4e60\u60ef\u4e8e\u6258\u7ba1\u5728Github\u4e0a\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u4e2aCICD\u5de5\u4f5c\u6d41\uff0c\u540c\u6b65\u4e24\u8fb9\u7684\u4ee3\u7801\u4ed3\u5e93\u3002"),(0,r.kt)("h2",{id:"hugging-push\u5b9e\u73b0\u7684\u529f\u80fd"},"Hugging Push\u5b9e\u73b0\u7684\u529f\u80fd"),(0,r.kt)("p",null,"Hugging Push \u8fd9\u4e2aGitHub action \u5b8c\u6210\u7684\u4e8b\u60c5\u662f\u5c06Action\u6240\u6267\u884c\u7684github\u7684\u4ee3\u7801\u4ed3\u5e93\u540c\u6b65\u5230hugging face space \u7684\u4ee3\u7801\u4ed3\u5e93\u3002\u4e0d\u9700\u8981\u624b\u5de5\u540c\u6b65\uff0c\u53ea\u8981\u7ef4\u62a4\u597dGithub\u4e00\u4efd\u4ee3\u7801\u4ed3\u5e93\u5373\u53ef\u3002"),(0,r.kt)("h2",{id:"\u4f7f\u7528\u65b9\u6cd5"},"\u4f7f\u7528\u65b9\u6cd5"),(0,r.kt)("p",null,"\u9996\u5148\u7528\u81ea\u5df1\u7684\u8d26\u6237\u767b\u9646\u5e76\u5728Hugging Face\u7684\u540e\u53f0\u7ba1\u7406\u754c\u9762\u521b\u5efa\u4e00\u4e2atoken\uff0c\u8d4b\u4e88\u6709\u53ef\u5199\u7684\u6743\u9650\u5e76\u5c06\u5176\u4f5c\u4e3aGitHub Secret\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Deploy to huggingface\n\non:\n  push:\n    branches: [main]\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: backendcloud/hugging-push@v0.2.3\n        with:\n          # The Hugging Face repo id you want to sync to.\n          # A repo with this name will be created if it doesn't exist. Required.\n          # The github username is not included. ex: not like this 'username/reponame', but like this: 'reponame'\n          # the key of huggingface_repo can be omitted. If the key is commented out, it defaults to the same name as the Github repository. \n          # huggingface_repo: 'ChatGPT'\n\n          # Hugging Face token with write access. Required.\n          # Here, we provide a token that we called `HF_TOKEN` when we added the secret to our GitHub repo.\n          hf_token: ${{ secrets.HF_TOKEN }}\n\n          # The type of repo you are syncing to: model, dataset, or space.\n          # Defaults to space.\n          repo_type: 'space'\n  \n          # If true and the Hugging Face repo doesn't already exist, it will be created\n          # as a private repo.\n          #\n          # Note: this param has no effect if the repo already exists.\n          private: false\n\n          # If repo type is space, specify a space_sdk. One of: streamlit, gradio, or static\n          #\n          # This option is especially important if the repo has not been created yet.\n          # It won't really be used if the repo already exists.\n          space_sdk: 'gradio'\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"- uses: actions/checkout@v2"),"\u8fd9\u4e2a\u5bf9\u4ed3\u5e93\u7684checkout\u7684action\u4e0d\u9700\u8981\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u6b65\u9aa4\u5df2\u7ecf\u5305\u542b\u5728Action: backendcloud/hugging-push \u5f53\u4e2d\u3002")))}p.isMDXComponent=!0}}]);