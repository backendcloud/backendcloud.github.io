"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8086],{3905:(e,n,a)=>{a.d(n,{Zo:()=>s,kt:()=>x});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function d(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?d(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):d(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},d=Object.keys(e);for(t=0;t<d.length;t++)a=d[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(e);for(t=0;t<d.length;t++)a=d[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=t.createContext({}),c=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},s=function(e){var n=c(e.components);return t.createElement(l.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,d=e.originalType,l=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=c(a),m=r,x=p["".concat(l,".").concat(m)]||p[m]||u[m]||d;return a?t.createElement(x,i(i({ref:n},s),{},{components:a})):t.createElement(x,i({ref:n},s))}));function x(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var d=a.length,i=new Array(d);i[0]=m;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[p]="string"==typeof e?e:r,i[1]=o;for(var c=2;c<d;c++)i[c]=a[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7823:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>d,metadata:()=>o,toc:()=>c});var t=a(7462),r=(a(7294),a(3905));const d={title:"client-go \u6e90\u7801\u5206\u6790\uff085\uff09 - informer\u673a\u5236\u4e2d\u7684\u672c\u5730\u5b58\u50a8indexer",readmore:!0,date:new Date("2022-12-05T18:16:20.000Z"),categories:"\u4e91\u539f\u751f",tags:["client-go"]},i=void 0,o={unversionedId:"cloud-native/client-go/client-go-05",id:"cloud-native/client-go/client-go-05",title:"client-go \u6e90\u7801\u5206\u6790\uff085\uff09 - informer\u673a\u5236\u4e2d\u7684\u672c\u5730\u5b58\u50a8indexer",description:"informer\u673a\u5236\u4e2d\u7684\u672c\u5730\u5b58\u50a8\uff08local cache\uff09\uff0c\u5bf9\u5e94\u7684\u7ed3\u6784\u4f53\u662f\u4e0b\u9762\u7684cache struct\u3002",source:"@site/docs/cloud-native/client-go/client-go-05.md",sourceDirName:"cloud-native/client-go",slug:"/cloud-native/client-go/client-go-05",permalink:"/docs/cloud-native/client-go/client-go-05",draft:!1,editUrl:"https://github.com/backendcloud/docusaurus/tree/main/docs/cloud-native/client-go/client-go-05.md",tags:[{label:"client-go",permalink:"/docs/tags/client-go"}],version:"current",frontMatter:{title:"client-go \u6e90\u7801\u5206\u6790\uff085\uff09 - informer\u673a\u5236\u4e2d\u7684\u672c\u5730\u5b58\u50a8indexer",readmore:!0,date:"2022-12-05T18:16:20.000Z",categories:"\u4e91\u539f\u751f",tags:["client-go"]},sidebar:"tutorialSidebar",previous:{title:"client-go \u6e90\u7801\u5206\u6790\uff084\uff09 - ClientSet\u5ba2\u6237\u7aef \u548c DynamicClient\u5ba2\u6237\u7aef",permalink:"/docs/cloud-native/client-go/client-go-04"},next:{title:"client-go \u6e90\u7801\u5206\u6790\uff086\uff09 - DeltaFIFO",permalink:"/docs/cloud-native/client-go/client-go-06"}},l={},c=[],s={toc:c},p="wrapper";function u(e){let{components:n,...d}=e;return(0,r.kt)(p,(0,t.Z)({},s,d,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"informer\u673a\u5236\u4e2d\u7684\u672c\u5730\u5b58\u50a8\uff08local cache\uff09\uff0c\u5bf9\u5e94\u7684\u7ed3\u6784\u4f53\u662f\u4e0b\u9762\u7684cache struct\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"type cache struct {\n    // cacheStorage bears the burden of thread safety for the cache\n    cacheStorage ThreadSafeStore\n    // keyFunc is used to make the key for objects stored in and retrieved from items, and\n    // should be deterministic.\n    keyFunc KeyFunc\n}\n")),(0,r.kt)("p",null,"\u8be5\u7ed3\u6784\u4f53\u5305\u542b\u6709\u4e00\u4e2aKeyFunc\u51fd\u6570\u5c5e\u6027\uff08\u4e00\u4e2acache\u5bf9\u8c61\uff0c\u6216\u8005\u8bf4\u4e00\u4e2aindexer\uff0c\u6216\u8005\u8bf4\u4e00\u4e2a\u672c\u5730\u5b58\u50a8\uff0c\u53ea\u6709\u4e00\u4e2aKeyFunc\uff0c\u4f5c\u7528\u662f\u4e3aitems\u7684value\uff1aobj\u751f\u6210\u5bf9\u5e94\u7684key\uff0c\u8fd9\u91cc\u7684KeyFunc\u548c\u4e0b\u9762\u7684IndexFunc\u4e0d\u4e00\u6837\uff0c\u522b\u641e\u6df7\u4e86\uff09\u548cThreadSafeStore\u63a5\u53e3\uff0c\u4e0b\u9762\u7684threadSafeMap struct\u5b9e\u73b0\u4e86ThreadSafeStore\u63a5\u53e3\u7684\u6240\u6709\u65b9\u6cd5\u3002"),(0,r.kt)("p",null,"KeyFunc\u51fd\u6570\u7684\u4f5c\u7528\u662f\u7b97\u51fa\u4e00\u4e2aobj\u5bf9\u8c61\u7684\u4e0d\u91cd\u590d\u7684key\uff0c\u5c06\u7b97\u51fa\u7684key\u4f5c\u4e3aitems\u7684key\uff0cobj\u4f5c\u4e3aitems\u7684value\u3002\u800citems map\u5c31\u662f\u5b9e\u9645\u7684\u5b58\u50a8\u672c\u5730\u5b58\u50a8\u6570\u636e\u7684\u5730\u65b9\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"type threadSafeMap struct {\n    lock  sync.RWMutex\n    items map[string]interface{}\n\n    // index implements the indexing functionality\n    index *storeIndex\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"type storeIndex struct {\n    // indexers maps a name to an IndexFunc\n    indexers Indexers\n    // indices maps a name to an Index\n    indices Indices\n}\n")),(0,r.kt)("p",null,"\u5728\u8fdb\u5165threadSafeMap\u7ed3\u6784\u4f53\u4e2d\u7684storeIndex\u7ed3\u6784\u4f53\u524d\uff0c\u9700\u8981\u4e86\u89e3\u51e0\u4e2a\u6982\u5ff5\u3002"),(0,r.kt)("p",null,"storeIndex\u662fitems map\u7684\u7d22\u5f15\uff0c\u4e14\u8bbe\u8ba1\u7684\u6bd4\u8f83\u7cbe\u5999\uff0c\u4f46\u662f\u7406\u89e3\u8d77\u6765\u6709\u70b9\u7ed5\uff0c\u4e0b\u9762\u7684\u56fe\u662f\u7d22\u5f15\u7684\u7b80\u5355\u4f8b\u5b50\u3002\u63a5\u4e0b\u6765\u7684\u7d22\u5f15\u7684\u4ee3\u7801\u8981\u7ed3\u5408\u4e0b\u9762\u7684\u56fe\u7406\u89e3\u4f1a\u6e05\u6670\u5f88\u591a\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{src:a(430).Z,width:"677",height:"570"})),(0,r.kt)("p",null,"\u5728local store\u4e2d\u6700\u4e3b\u8981\u7684\u662f\u67094\u4e2a\u6982\u5ff5\u9700\u8981\u7406\u89e3\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Indexers: type Indexers map","[string]","IndexFunc"),(0,r.kt)("li",{parentName:"ol"},"IndexFunc: type IndexFunc func(obj interface{}) ([]string, error)"),(0,r.kt)("li",{parentName:"ol"},"Indices: type Indices map","[string]","Index"),(0,r.kt)("li",{parentName:"ol"},"Index: type Index map","[string]","sets.String")),(0,r.kt)("p",null,"\u7ed3\u5408\u4e0a\u9762\u7684\u56fe\u7406\u89e3\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Indexers\uff1a\u7d22\u5f15\u51fd\u6570\u7684\u96c6\u5408\uff0c\u5b83\u4e3a\u4e00\u4e2amap\uff0c\u5176key\u4e3a\u7d22\u5f15\u5668\u7684\u540d\u5b57IndexName(\u81ea\u5b9a\u4e49\uff0c\u4f46\u8981\u552f\u4e00)\uff0cvalue\u4e3a\u5bf9\u5e94\u7684\u7d22\u5f15\u51fd\u6570IndexFunc"),(0,r.kt)("li",{parentName:"ol"},"IndexFunc: \u7d22\u5f15\u51fd\u6570\uff0c\u5b83\u63a5\u6536\u4e00\u4e2aobj\uff0c\u5e76\u5b9e\u73b0\u903b\u8f91\u6765\u53d6\u51fa/\u7b97\u51fa\u8be5obj\u7684\u7d22\u5f15\u6570\u7ec4\u3002\u9700\u8981\u6ce8\u610f\u662f\u7d22\u5f15\u6570\u7ec4\uff0c\u5177\u4f53\u53d6\u4ec0\u4e48\u6216\u7b97\u51fa\u4ec0\u4e48\u4f5c\u4e3a\u7d22\u5f15\u5b8c\u5168\u662f\u6211\u4eec\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\u3002"),(0,r.kt)("li",{parentName:"ol"},"Indices: \u7d22\u5f15\u6570\u636e\u96c6\u5408\uff0c\u5b83\u4e3a\u4e00\u4e2amap\uff0c\u5176key\u548cIndexers\u4e2d\u7684key\u5bf9\u5e94\uff0c\u8868\u793a\u7d22\u5f15\u5668\u7684\u540d\u5b57\u3002Value\u4e3a\u5f53\u524d\u5230\u8fbe\u6570\u636e\u901a\u8fc7\u8be5\u7d22\u5f15\u51fd\u6570\u8ba1\u7b97\u51fa\u6765\u7684Index\u3002"),(0,r.kt)("li",{parentName:"ol"},"Index: \u7d22\u5f15\u4e0e\u6570\u636ekey\u96c6\u5408\uff0c\u5b83\u7684key\u4e3a\u7d22\u5f15\u5668\u8ba1\u7b97\u51fa\u6765\u7684\u7d22\u5f15\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u9879\uff0cvalue\u4e3a\u5bf9\u5e94\u7684\u8d44\u6e90\u7684key(\u9ed8\u8ba4namespace/name)\u96c6\u5408\u3002")),(0,r.kt)("p",null,"\u901a\u8bfb\u4e0bclient-go\\tools\\cache \u5305\u4e0b\u7684 store.go \u548c thread_safe_store.go \u7684\u4ee3\u7801\uff0c\u5176\u4e2d\u7d22\u5f15\u6709\u70b9\u7ed5\uff0c\u591a\u6b21\u53cd\u590d\u5bf9\u7167\u4e0a\u56fe\u53ef\u4ee5\u83b7\u5f97\u66f4\u597d\u7406\u89e3\u3002\u518d\u7ed3\u5408\u4e0b\u9762\u5b9e\u9645\u7684\u5efa\u7acb\u548c\u67e5\u8be2\u7d22\u5f15\u7684\u4f8b\u5b50\u66f4\u52a0\u6709\u52a9\u7406\u89e3\u4ee3\u7801\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "fmt"\n\n    v1 "k8s.io/api/core/v1"\n    "k8s.io/apimachinery/pkg/api/meta"\n    metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"\n    "k8s.io/client-go/tools/cache"\n)\n\nconst (\n    NamespaceIndexName = "namespace"\n    NodeNameIndexName  = "nodeName"\n)\n\nfunc NamespaceIndexFunc(obj interface{}) ([]string, error) {\n    m, err := meta.Accessor(obj)\n    if err != nil {\n        return []string{""}, fmt.Errorf("object has no meta: %v", err)\n    }\n    return []string{m.GetNamespace()}, nil\n}\n\nfunc NodeNameIndexFunc(obj interface{}) ([]string, error) {\n    pod, ok := obj.(*v1.Pod)\n    if !ok {\n        return []string{}, nil\n    }\n    return []string{pod.Spec.NodeName}, nil\n}\n\nfunc main() {\n    index := cache.NewIndexer(cache.MetaNamespaceKeyFunc, cache.Indexers{\n        NamespaceIndexName: NamespaceIndexFunc,\n        NodeNameIndexName:  NodeNameIndexFunc,\n    })\n\n    pod1 := &v1.Pod{\n        ObjectMeta: metav1.ObjectMeta{\n            Name:      "index-pod-1",\n            Namespace: "default",\n        },\n        Spec: v1.PodSpec{NodeName: "node1"},\n    }\n    pod2 := &v1.Pod{\n        ObjectMeta: metav1.ObjectMeta{\n            Name:      "index-pod-2",\n            Namespace: "default",\n        },\n        Spec: v1.PodSpec{NodeName: "node2"},\n    }\n    pod3 := &v1.Pod{\n        ObjectMeta: metav1.ObjectMeta{\n            Name:      "index-pod-3",\n            Namespace: "kube-system",\n        },\n        Spec: v1.PodSpec{NodeName: "node2"},\n    }\n\n    _ = index.Add(pod1)\n    _ = index.Add(pod2)\n    _ = index.Add(pod3)\n\n    // ByIndex \u4e24\u4e2a\u53c2\u6570\uff1aIndexName\uff08\u7d22\u5f15\u5668\u540d\u79f0\uff09\u548c indexKey\uff08\u9700\u8981\u68c0\u7d22\u7684key\uff09\n    pods, err := index.ByIndex(NamespaceIndexName, "default")\n    if err != nil {\n        panic(err)\n    }\n    for _, pod := range pods {\n        fmt.Println(pod.(*v1.Pod).Name)\n    }\n\n    fmt.Println("==========================")\n\n    pods, err = index.ByIndex(NodeNameIndexName, "node2")\n    if err != nil {\n        panic(err)\n    }\n    for _, pod := range pods {\n        fmt.Println(pod.(*v1.Pod).Name)\n    }\n\n}\n')),(0,r.kt)("p",null,"\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u8bf4\u662f\u6700\u5e38\u89c1\u7684\u6700\u7b80\u5355\u7684\u7d22\u5f15example\u3002\u521b\u5efa\u4e86\u4e24\u4e2a\u7d22\u5f15\u51fd\u6570\uff0c\u5206\u522b\u662fNamespaceIndexFunc\u548cNodeNameIndexFunc\uff0c\u51fd\u6570\u7684\u4f5c\u7528\u5206\u522b\u662f\u83b7\u53d6obj\u7684namespace\u4fe1\u606f\u548c\u83b7\u53d6obj\u7684\u6240\u5728\u8282\u70b9\u4fe1\u606f\u3002\u521b\u5efa\u4e863\u4e2apod\uff0c\u5176\u4e2dpod1\uff0cpod2\u5728default namespace\u4e2d\uff0cpod3\u5728\u53e6\u4e00\u4e2anamespace\u4e2d\uff1bpod2\uff0cpod3\u5728node2\u4e0a\uff0cpod1\u5728\u53e6\u4e00\u4e2anode\u4e0a\u3002"),(0,r.kt)("p",null,"index.ByIndex\u662f\u901a\u8fc7\u7d22\u5f15\u67e5\u627e\uff0c\u8c03\u7528\u4e86\u4e24\u6b21\uff0c\u5206\u522b\u67e5\u627edefault namespace\u7684pod\u5bf9\u8c61 \u548c \u5728node2\u8282\u70b9\u7684pod\u5bf9\u8c61\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"GOROOT=C:\\go\\go1.19 #gosetup\nGOPATH=C:\\Users\\hanwei\\go #gosetup\nC:\\go\\go1.19\\bin\\go.exe build -o C:\\Users\\hanwei\\AppData\\Local\\Temp\\GoLand\\___11go_build_lab.exe lab #gosetup\nC:\\Users\\hanwei\\AppData\\Local\\Temp\\GoLand\\___11go_build_lab.exe\nindex-pod-1\nindex-pod-2\n==========================\nindex-pod-2\nindex-pod-3\n\nProcess finished with the exit code 0\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"ByIndex(indexName, indexedValue string) ([]interface{}, error)\n")),(0,r.kt)("p",null,"ByIndex \u65b9\u6cd5\u4e3b\u8981\u5de5\u4f5c\u662f\uff1a\u6839\u636e\u7d22\u5f15\u5668\u540d\u79f0\uff0c\u6bd4\u5982\u4e0a\u9762main\u65b9\u6cd5\u4f8b\u5b50\u4e2d\u7684nodeName\u7d22\u5f15\u5668\u540d\u79f0\uff0c\u83b7\u53d6\u7d22\u5f15\u51fd\u6570NodeNameIndexFunc\uff0c\u6240\u6839\u636e\u7d22\u5f15\u5668\u540d\u79f0\u83b7\u5f97\u7684\u7d22\u5f15\u51fd\u6570\u4e3anil\uff0c\u5219\u5f80\u4e0a\u5c42\u62a5\u9519\u7d22\u5f15\u5668\u4e0d\u5b58\u5728\u3002\u5e76\u901a\u8fc7map indices\uff08map indices\u7684key\u662f\u7d22\u5f15\u5668\u540d\u79f0\uff0cvalue\u662findex\uff09\u6839\u636e\u7d22\u5f15\u5668\u540d\u79f0nodeName\u83b7\u53d6\u771f\u6b63\u7684\u7d22\u5f15index\uff0cindex\u5bf9\u5e94\u4e0a\u56fe\u7684\u53f3\u4e0b\u89d2\u7684\u8868\u683c\uff0cByIndex \u65b9\u6cd5\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5bf9\u5e94\u4e0a\u56fe\u53f3\u4e0b\u89d2\u8868\u683c\u7684\u7b2c\u4e00\u5217\uff0cset := index","[indexedValue]","\u4e2d\u7684set\u5bf9\u5e94\u7b2c\u4e8c\u5217\uff0cset\u5bf9\u5e94items\u7684key\u503c\uff0citems map\u662f\u5b9e\u9645\u5b58\u50a8obj\u7684map\u3002\u901a\u8fc7set\u5bf9\u5e94items\u7684key\u503c\u53ef\u4ee5\u83b7\u53d6\u5b9e\u9645\u7684obj\uff0c\u5373main\u65b9\u6cd5\u4e2d\u7684pod list\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'// ByIndex returns a list of the items whose indexed values in the given index include the given indexed value\nfunc (c *threadSafeMap) ByIndex(indexName, indexedValue string) ([]interface{}, error) {\n    c.lock.RLock()\n    defer c.lock.RUnlock()\n\n    indexFunc := c.indexers[indexName]\n    if indexFunc == nil {\n        return nil, fmt.Errorf("Index with name %s does not exist", indexName)\n    }\n\n    index := c.indices[indexName]\n\n    set := index[indexedValue]\n    list := make([]interface{}, 0, set.Len())\n    for key := range set {\n        list = append(list, c.items[key])\n    }\n\n    return list, nil\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"    _ = index.Add(pod1)\n    _ = index.Add(pod2)\n    _ = index.Add(pod3)\n")),(0,r.kt)("p",null,"index.Add\u7684\u65b9\u6cd5\u662f\u5bf9obj\u5bf9\u8c61\u5efa\u7acb\u7d22\u5f15\u3002\u4e0a\u9762\u7684main\u65b9\u6cd5\u5bf9\u4e09\u4e2apod\u5bf9\u8c61\u521b\u5efa\u7d22\u5f15\u3002\u6ce8\u610f\uff0c\u5728\u5bf9obj\u521b\u5efa\u7d22\u5f15\u4e4b\u524d\u9700\u8981\u5148\u521b\u5efa\u7d22\u5f15\u5668\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002\u4e5f\u53ef\u6362\u4e00\u79cd\u8bf4\u6cd5\uff0c\u5728\u521b\u5efa\u7d22\u5f15\u5668\u7684\u65f6\u5019\u4f1a\u68c0\u67e5items\u662f\u5426\u4e3a\u7a7a\uff0c\u82e5\u4e0d\u4e3a\u7a7a\u4f1a\u62a5\u9519\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"// Add inserts an item into the cache.\nfunc (c *cache) Add(obj interface{}) error {\n    key, err := c.keyFunc(obj)\n    if err != nil {\n        return KeyError{obj, err}\n    }\n    c.cacheStorage.Add(key, obj)\n    return nil\n}\n")),(0,r.kt)("p",null,"index.Add \u5148\u901a\u8fc7KeyFunc\u7b97\u51faobj\u7684key\uff0c\u7136\u540e\u5c06key/value\u5bf9\u5b58\u5165items\u4e2d\u3002\u5e76\u8c03\u7528c.cacheStorage.Add\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u4f1a\u8c03\u7528 updateIndices \u65b9\u6cd5\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"func (c *threadSafeMap) Add(key string, obj interface{}) {\n    c.Update(key, obj)\n}\n\nfunc (c *threadSafeMap) Update(key string, obj interface{}) {\n    c.lock.Lock()\n    defer c.lock.Unlock()\n    oldObject := c.items[key]\n    c.items[key] = obj\n    c.updateIndices(oldObject, obj, key)\n}\n")),(0,r.kt)("p",null,"updateIndices\u4e2d\u7684oldObj\u4e3anil\uff08\u4ee5main\u65b9\u6cd5\u4e3a\u4f8b\uff09\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4e3b\u8981\u5904\u7406\u7684\u5de5\u4f5c\u662f\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u904d\u5386\u6240\u6709indexers\uff0c\u83b7\u5f97key/value\u5bf9\uff0c\u5373\u7d22\u5f15\u5668\u540d\u79f0\u548c\u7d22\u5f15\u51fd\u6570\uff0c\u7528\u7d22\u5f15\u51fd\u6570\u7b97\u51faobj\u7684indexValues\uff0c\u90a3\u4e0a\u9762\u7684main\u65b9\u6cd5\u4e2d\u7684 nodeName\u7d22\u5f15\u5668\u540d\u79f0\uff0c\u83b7\u53d6\u7d22\u5f15\u51fd\u6570NodeNameIndexFunc \u8fd9\u4e00\u5bf9map indexers\u7684key/value\u5bf9\u4e3e\u4f8b\uff0cindexValues, err = indexFunc(newObj)\u8fd9\u53e5\u4ee3\u7801\u7b97\u51fa\u4e09\u4e2apod\u7684\u6240\u5728\u8282\u70b9\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u6267\u884c c.addKeyToIndex(key, value, index) \u8fd9\u4e00\u53e5\u4ee3\u7801\u3002\u4e09\u4e2a\u53c2\u6570\u5206\u522b\u4e3a\uff1a\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a pod obj\u7684\u5b58\u50a8\u5728items map\u4e2d\u7684key\u503c\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3apod obj\u7684pod\u6240\u5728\u8282\u70b9\u7684\u4fe1\u606f\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e3aindex map\uff0c\u5373\u4e0a\u56fe\u53f3\u4e0b\u89d2\u7684\u8868\u683c\u3002"),(0,r.kt)("li",{parentName:"ol"},"addKeyToIndex\u65b9\u6cd5\u7684\u5c31\u662f\u66f4\u65b0index map\uff0cindex map\u7684key\u662f\u5bf9\u5e94\u7684\u4e0a\u9762\u7684node\u4fe1\u606f\uff0ckey\u5bf9\u5e94\u7684value\u662fpod obj\u7684item\u4e2d\u7684key\u503c\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'func (c *threadSafeMap) updateIndices(oldObj interface{}, newObj interface{}, key string) {\n    var oldIndexValues, indexValues []string\n    var err error\n    for name, indexFunc := range c.indexers {\n        if oldObj != nil {\n            oldIndexValues, err = indexFunc(oldObj)\n        } else {\n            oldIndexValues = oldIndexValues[:0]\n        }\n        if err != nil {\n            panic(fmt.Errorf("unable to calculate an index entry for key %q on index %q: %v", key, name, err))\n        }\n\n        if newObj != nil {\n            indexValues, err = indexFunc(newObj)\n        } else {\n            indexValues = indexValues[:0]\n        }\n        if err != nil {\n            panic(fmt.Errorf("unable to calculate an index entry for key %q on index %q: %v", key, name, err))\n        }\n\n        index := c.indices[name]\n        if index == nil {\n            index = Index{}\n            c.indices[name] = index\n        }\n\n        if len(indexValues) == 1 && len(oldIndexValues) == 1 && indexValues[0] == oldIndexValues[0] {\n            // We optimize for the most common case where indexFunc returns a single value which has not been changed\n            continue\n        }\n\n        for _, value := range oldIndexValues {\n            c.deleteKeyFromIndex(key, value, index)\n        }\n        for _, value := range indexValues {\n            c.addKeyToIndex(key, value, index)\n        }\n    }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"func (c *threadSafeMap) addKeyToIndex(key, indexValue string, index Index) {\n    set := index[indexValue]\n    if set == nil {\n        set = sets.String{}\n        index[indexValue] = set\n    }\n    set.Insert(key)\n}\n")),(0,r.kt)("p",null,"\u603b\u7ed3\u4e0b\uff0c\u4e0a\u9762\u7684main\u65b9\u6cd5\u751f\u6210\u7684\u7d22\u5f15\u76f8\u5173\u7684map\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'# Indexers \u5c31\u662f\u5305\u542b\u7684\u6240\u6709\u7d22\u5f15\u5668(\u5206\u7c7b)\u4ee5\u53ca\u5bf9\u5e94\u5b9e\u73b0\nindexers: {  \n  "namespace": NamespaceIndexFunc,\n  "nodeName": NodeNameIndexFunc,\n}\n# Indices \u5c31\u662f\u5305\u542b\u7684\u6240\u6709\u7d22\u5f15\u5206\u7c7b\u4e2d\u6240\u6709\u7684\u7d22\u5f15\u6570\u636e\nindices: {\n "namespace": {  #namespace \u8fd9\u4e2a\u7d22\u5f15\u5206\u7c7b\u4e0b\u7684\u6240\u6709\u7d22\u5f15\u6570\u636e\n  "default": ["pod-1", "pod-2"],  # Index \u5c31\u662f\u4e00\u4e2a\u7d22\u5f15\u952e\u4e0b\u6240\u6709\u7684\u5bf9\u8c61\u952e\u5217\u8868\n  "kube-system": ["pod-3"]   # Index\n },\n "nodeName": {  # nodeName \u8fd9\u4e2a\u7d22\u5f15\u5206\u7c7b\u4e0b\u7684\u6240\u6709\u7d22\u5f15\u6570\u636e(\u5bf9\u8c61\u952e\u5217\u8868)\n  "node1": ["pod-1"],  # Index\n  "node2": ["pod-2", "pod-3"]  # Index\n }\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u8fd9\u4e24\u4e2amap \u7684 key \u6570\u91cf\u548c \u540d\u79f0\u5b8c\u5168\u4e00\u81f4\u3002 key\u662f\u7d22\u5f15\u5668\u540d\u79f0\uff0cvalue\u5206\u522b\u662f\u7d22\u5f15\u5668\u51fd\u6570\u548cindex map\u3002"),(0,r.kt)("li",{parentName:"ul"},"map indices\u7684value\u4e5f\u662fmap\uff0c\u662findex map\u3002"),(0,r.kt)("li",{parentName:"ul"},"map index \u7684key/value\u662f map Indexers\u7684value\u51fd\u6570 \u901a\u8fc7\u5165\u53c2obj\u7b97\u51fa\u6765\u540e\u63d2\u5165\u7684\u3002"),(0,r.kt)("li",{parentName:"ul"},"mapindex \u7684value\u4e0d\u662f\u7684obj\uff0c\u800c\u662f map items \u4e2d\u7684key\uff0c\u901a\u8fc7map items","[key]","\u53ef\u4ee5\u83b7\u53d6obj\u3002")),(0,r.kt)("p",null,"\u589e\u5220\u6539\u67e5\u7d22\u5f15\u7684\u5b9e\u73b0\u90fd\u633a\u7b80\u5355\u7684\uff0c\u5176\u5b9e\u4e3b\u8981\u8fd8\u662f\u8981\u5bf9 indices\u3001indexs \u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u975e\u5e38\u4e86\u89e3\uff0c\u8fd9\u6837\u5c31\u975e\u5e38\u5bb9\u6613\u4e86\u3002"),(0,r.kt)("p",null,"\u4e3b\u8981\u96be\u70b9\u5c31\u662f indices\u3001indexs \u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\uff0c\u53e6\u5916\u8fd8\u6709\u51e0\u4e2a\u6b21\u8981\u7684\u70b9\uff0c\u4e0d\u8981\u6982\u5ff5\u641e\u6df7\u4e86\uff0cindexFunc\uff0ckeyFunc\uff0citems\u3002\u53ef\u4ee5\u5c06 indexFunc \u5f53\u6210\u5f53\u524d\u5bf9\u8c61\u7684\u547d\u540d\u7a7a\u95f4\u6765\u770b\u5f85\uff0c\u5bf9\u7406\u89e3\u53c8\u6709\u4e00\u5b9a\u7684\u5e2e\u52a9\u3002"),(0,r.kt)("p",null,"\u901a\u8fc7\u7d22\u5f15\u7684\u8bbe\u8ba1\uff0c\u53ef\u4ee5\u770b\u51fa\u6781\u5927\u52a0\u5feb\u4e86\u67e5\u8be2obj\u7684\u901f\u5ea6\uff0c\u5e76\u4e14\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7d22\u5f15\u51fd\u6570\uff0c\u5b9e\u73b0\u5feb\u901f\u4e2a\u6027\u5316\u7d22\u5f15\u67e5\u8be2\u3002\u6570\u636e\u5e93\u67e5\u8be2\u4e3a\u4e86\u52a0\u5feb\u67e5\u8be2\u901f\u5ea6\u4e5f\u4f1a\u6709\u7d22\u5f15\u7684\u8bbe\u8ba1\uff0c\u4e0a\u9762\u4e5f\u53ef\u4ee5\u7b97\u662f\u4e2a\u6570\u636e\u5e93\u7d22\u5f15\u7684\u672c\u5730\u5b58\u50a8\u7684\u5b9e\u73b0\u3002"),(0,r.kt)("p",null,"\u7406\u89e3\u4e86\u4e0a\u9762\u7684\u4e3b\u7ebf\u4ee3\u7801\uff0c\u7406\u89e3\u4efb\u4f55informer \u7684 local cache\u7684\u4ee3\u7801\u90fd\u5bb9\u6613\u7406\u89e3\u4e86\u3002\u6bd4\u5982\u4e0b\u9762Index \u51fd\u6570\u5df2\u7ecf\u5f88\u597d\u7406\u89e3\u4e86\uff0c\u867d\u7136\u662f\u6240\u6709\u4ee3\u7801\u4e2d\u5269\u4e0b\u7684\u6700\u590d\u6742\u7684\u65b9\u6cd5\u4e86\uff1a"),(0,r.kt)("p",null,"Index \u51fd\u6570\u5c31\u662f\u83b7\u53d6\u4e00\u4e2a\u6307\u5b9a\u5bf9\u8c61\u7684\u6307\u5b9a\u7d22\u5f15\u4e0b\u9762\u7684\u6240\u6709\u7684\u5bf9\u8c61\u5168\u90e8\u83b7\u53d6\u5230\uff0c\u6bd4\u5982\u6211\u4eec\u8981\u83b7\u53d6\u4e00\u4e2a Pod \u6240\u5728\u547d\u540d\u7a7a\u95f4\u4e0b\u9762\u7684\u6240\u6709 Pod\uff0c\u5982\u679c\u66f4\u62bd\u8c61\u4e00\u70b9\uff0c\u5c31\u662f\u7b26\u5408\u5bf9\u8c61\u67d0\u4e9b\u7279\u5f81\u7684\u6240\u6709\u5bf9\u8c61\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'// Index returns a list of items that match the given object on the index function.\n// Index is thread-safe so long as you treat all items as immutable.\nfunc (c *threadSafeMap) Index(indexName string, obj interface{}) ([]interface{}, error) {\n    c.lock.RLock()\n    defer c.lock.RUnlock()\n\n    indexFunc := c.indexers[indexName]\n    if indexFunc == nil {\n        return nil, fmt.Errorf("Index with name %s does not exist", indexName)\n    }\n\n    indexedValues, err := indexFunc(obj)\n    if err != nil {\n        return nil, err\n    }\n    index := c.indices[indexName]\n\n    var storeKeySet sets.String\n    if len(indexedValues) == 1 {\n        // In majority of cases, there is exactly one value matching.\n        // Optimize the most common path - deduping is not needed here.\n        storeKeySet = index[indexedValues[0]]\n    } else {\n        // Need to de-dupe the return list.\n        // Since multiple keys are allowed, this can happen.\n        storeKeySet = sets.String{}\n        for _, indexedValue := range indexedValues {\n            for key := range index[indexedValue] {\n                storeKeySet.Insert(key)\n            }\n        }\n    }\n\n    list := make([]interface{}, 0, storeKeySet.Len())\n    for storeKey := range storeKeySet {\n        list = append(list, c.items[storeKey])\n    }\n    return list, nil\n}\n')))}u.isMDXComponent=!0},430:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/2022-12-05-11-01-45-38497c59bb5d73a62a1b8593b3547945.png"}}]);