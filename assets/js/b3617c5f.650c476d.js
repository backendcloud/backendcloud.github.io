"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4133],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>y});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=i.createContext({}),l=function(e){var n=i.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=l(e.components);return i.createElement(u.Provider,{value:n},e.children)},p="mdxType",s={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,u=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=l(t),g=r,y=p["".concat(u,".").concat(g)]||p[g]||s[g]||a;return t?i.createElement(y,o(o({ref:n},d),{},{components:t})):i.createElement(y,o({ref:n},d))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=g;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c[p]="string"==typeof e?e:r,o[1]=c;for(var l=2;l<a;l++)o[l]=t[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},2013:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>s,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var i=t(7462),r=(t(7294),t(3905));const a={title:"client-go \u6e90\u7801\u5206\u6790\uff088\uff09 - workerqueue\u4e4b\u5ef6\u65f6\u961f\u5217DelayingQueue",readmore:!1,date:new Date("2022-12-14T12:59:07.000Z"),categories:"\u4e91\u539f\u751f",tags:["client-go"]},o=void 0,c={unversionedId:"cloud-native/client-go/client-go-08",id:"cloud-native/client-go/client-go-08",title:"client-go \u6e90\u7801\u5206\u6790\uff088\uff09 - workerqueue\u4e4b\u5ef6\u65f6\u961f\u5217DelayingQueue",description:"\u5ef6\u65f6\u961f\u5217DelayingQueue\uff0c\u4ece\u4e0b\u9762\u7684\u63a5\u53e3\u53ef\u4ee5\u770b\u51fa\u6dfb\u52a0\u7684\u5143\u7d20\uff0c\u6709\u4e00\u4e2a\u5ef6\u8fdf\u65f6\u95f4\uff0c\u5ef6\u65f6\u65f6\u95f4\u5230\u4e86\u4e4b\u540e\u624d\u80fd\u52a0\u5165\u961f\u5217\u3002",source:"@site/docs/cloud-native/client-go/client-go-08.md",sourceDirName:"cloud-native/client-go",slug:"/cloud-native/client-go/client-go-08",permalink:"/docs/cloud-native/client-go/client-go-08",draft:!1,editUrl:"https://github.com/backendcloud/backendcloud.github.io/tree/main/docs/cloud-native/client-go/client-go-08.md",tags:[{label:"client-go",permalink:"/docs/tags/client-go"}],version:"current",frontMatter:{title:"client-go \u6e90\u7801\u5206\u6790\uff088\uff09 - workerqueue\u4e4b\u5ef6\u65f6\u961f\u5217DelayingQueue",readmore:!1,date:"2022-12-14T12:59:07.000Z",categories:"\u4e91\u539f\u751f",tags:["client-go"]},sidebar:"tutorialSidebar",previous:{title:"client-go \u6e90\u7801\u5206\u6790\uff087\uff09 - workerqueue\u4e4b\u666e\u901a\u961f\u5217Queue",permalink:"/docs/cloud-native/client-go/client-go-07"},next:{title:"client-go \u6e90\u7801\u5206\u6790\uff089\uff09 - workerqueue\u4e4b\u9650\u901f\u961f\u5217RateLimitingQueue",permalink:"/docs/cloud-native/client-go/client-go-09"}},u={},l=[],d={toc:l},p="wrapper";function s(e){let{components:n,...t}=e;return(0,r.kt)(p,(0,i.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"\u5ef6\u65f6\u961f\u5217DelayingQueue\uff0c\u4ece\u4e0b\u9762\u7684\u63a5\u53e3\u53ef\u4ee5\u770b\u51fa\u6dfb\u52a0\u7684\u5143\u7d20\uff0c\u6709\u4e00\u4e2a\u5ef6\u8fdf\u65f6\u95f4\uff0c\u5ef6\u65f6\u65f6\u95f4\u5230\u4e86\u4e4b\u540e\u624d\u80fd\u52a0\u5165\u961f\u5217\u3002"),(0,r.kt)("p",null,"\u5ef6\u8fdf\u961f\u5217\u7684\u5b9e\u73b0\u662f\uff0c\u6839\u636e\u52a0\u5165\u961f\u5217\u7684\u65f6\u95f4\uff0c\u6784\u9020\u4e00\u4e2a\u6700\u5c0f\u5806min-heap\uff0c\u7136\u540e\u5230\u65f6\u95f4\u70b9\u540e\uff0c\u5c06\u4ece\u6700\u5c0f\u5806pop\u4e00\u4e2a\u5143\u7d20\u52a0\u5165queue\u4e2d\uff08\u56e0\u4e3a\u6700\u5c0f\u5806\u662f\u6309\u7167\u5ef6\u65f6\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u7684\uff09\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"type DelayingInterface interface {\n    Interface\n    // AddAfter adds an item to the workqueue after the indicated duration has passed\n    AddAfter(item interface{}, duration time.Duration)\n}\n\ntype delayingType struct {\n    Interface // \u5b9e\u4f8b\u5316\u5ef6\u8fdf\u961f\u5217\u7684\u540c\u65f6\u5b9e\u4f8b\u5316\u4e86\u666e\u901a\u961f\u5217\n\n    // clock tracks time for delayed firing\n    clock clock.Clock\n\n    // stopCh lets us signal a shutdown to the waiting loop\n    stopCh chan struct{}\n    // stopOnce guarantees we only signal shutdown a single time\n    stopOnce sync.Once\n\n    // heartbeat ensures we wait no more than maxWait before firing\n    heartbeat clock.Ticker\n\n    // waitingForAddCh is a buffered channel that feeds waitingForAdd\n    waitingForAddCh chan *waitFor\n\n    // metrics counts the number of retries\n    metrics retryMetrics\n}\n")),(0,r.kt)("p",null,"\u5ef6\u8fdf\u961f\u5217\u7684\u5b9e\u73b0\u7528\u5230\u4e86\u5f88\u591a\u6982\u5ff5\u548c\u6570\u636e\u7ed3\u6784\uff0c\u9700\u8981\u641e\u6e05\u695a\u8fd9\u4e9b\u6982\u5ff5\u548c\u6570\u636e\u7ed3\u6784\u624d\u80fd\u7406\u89e3\u76f8\u5173\u4ee3\u7801\uff0c\u4e14\u5728\u5224\u65ad\u65f6\u95f4\u70b9\u662f\u5426\u5230\u8fbe\uff0c\u7528\u5230\u4e86\u6700\u5c0f\u5806\u673a\u5236\uff0c\u5fc3\u8df3\u673a\u5236\u548cchannel\u673a\u5236\u3002"),(0,r.kt)("p",null,"waitFor\u7ed3\u6784\u4f53\u4fdd\u5b58\u4e86\u8981\u52a0\u5165\u961f\u5217\u7684\u6570\u636e\u5bf9\u8c61\uff0c\u52a0\u5165\u961f\u5217\u7684\u65f6\u95f4\uff0cwaitFor\u6700\u4e3a\u6700\u5c0f\u5806item\u7684\u5806\u4e0a\u7684index\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"type waitFor struct {\n   data    t          // \u51c6\u5907\u6dfb\u52a0\u5230\u961f\u5217\u4e2d\u7684\u6570\u636e\n   readyAt time.Time  // \u5e94\u8be5\u88ab\u52a0\u5165\u961f\u5217\u7684\u65f6\u95f4\n   index int          // \u5728 heap \u4e2d\u7684\u7d22\u5f15\n}\n")),(0,r.kt)("p",null,"\u4e0b\u9762\u4ee3\u7801\u5b9e\u73b0\u4e86\u5806heap\u7684\u63a5\u53e3\u76845\u4e2a\u65b9\u6cd5\u3002\u5806heap\u7684\u5143\u7d20item\u5c31\u662f\u4e0a\u9762\u7684waitFor\u7ed3\u6784\u4f53\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"type waitForPriorityQueue []*waitFor\n\nfunc (pq waitForPriorityQueue) Len() int {\n    return len(pq)\n}\nfunc (pq waitForPriorityQueue) Less(i, j int) bool {\n    return pq[i].readyAt.Before(pq[j].readyAt)\n}\nfunc (pq waitForPriorityQueue) Swap(i, j int) {\n    pq[i], pq[j] = pq[j], pq[i]\n    pq[i].index = i\n    pq[j].index = j\n}\nfunc (pq *waitForPriorityQueue) Push(x interface{}) {\n    n := len(*pq)\n    item := x.(*waitFor)\n    item.index = n\n    *pq = append(*pq, item)\n}\nfunc (pq *waitForPriorityQueue) Pop() interface{} {\n    n := len(*pq)\n    item := (*pq)[n-1]\n    item.index = -1\n    *pq = (*pq)[0:(n - 1)]\n    return item\n}\n// \u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u975eheap\u63a5\u53e3\u7684\u5b9e\u73b0\u65b9\u6cd5\u3002\n// \u8fd9\u91cc\u6ca1\u6709\u5199\u9519\uff0c\u51fd\u6570\u63a5\u6536\u5668\u4e0d\u7528\u6307\u9488\u662f\u4e3a\u4e86\u4e0d\u6539\u53d8waitForPriorityQueue\u5185\u7684\u6570\u636e\u3002\n// \u540e\u9762\u8c03\u7528\u8be5\u65b9\u6cd5\u90fd\u662f\u4e3a\u4e86\u68c0\u67e5\u6700\u5c0f\u5806pop\u7684item\uff0c\uff08\u56e0\u4e3a\u662f\u6700\u5c0f\u5806\uff0cpop\u51fa\u6765\u7684item\u7684\u5230\u671f\u65f6\u95f4\u4e00\u5b9a\u662f\u6700\u65e9\u7684\uff09\u7684\u5230\u671f\u65f6\u95f4\u662f\u6bd4now\u65f6\u95f4\u65e9\u8fd8\u662f\u665a\nfunc (pq waitForPriorityQueue) Peek() interface{} {\n    return pq[0]\n}\n")),(0,r.kt)("p",null,"\u5ef6\u65f6\u961f\u5217DelayingQueue\u7684\u6838\u5fc3\u5c31\u662f\u8fd0\u884c waitingLoop\u65b9\u6cd5\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"func newDelayingQueue(clock clock.WithTicker, q Interface, name string) *delayingType {\n    ret := &delayingType{\n        Interface:       q,\n        clock:           clock,\n        heartbeat:       clock.NewTicker(maxWait),\n        stopCh:          make(chan struct{}),\n        waitingForAddCh: make(chan *waitFor, 1000),\n        metrics:         newRetryMetrics(name),\n    }\n\n    go ret.waitingLoop()\n    return ret\n}\n")),(0,r.kt)("p",null,"AddAfter\u65b9\u6cd5\u662f\u5bf9DelayingInterface\u63a5\u53e3\u7684\u5b9e\u73b0\u3002AddAfter\u65b9\u6cd5\u662f\u5728\u7ed9\u5b9a\u5ef6\u8fdf\u540e\u5c06\u7ed9\u5b9a\u9879\u76ee\u6dfb\u52a0\u5230\u5de5\u4f5c\u961f\u5217\u3002\u5177\u4f53\u662f\u901a\u8fc7\u5c06\u4e24\u4e2a\u5165\u53c2\u7ec4\u88c5\u6210waitFor\u7ed3\u6784\u4f53 &waitFor{data: item, readyAt: q.clock.Now().Add(duration)} \u653e\u5165\u5230channel waitingForAddCh: make(chan *waitFor, 1000) \u4e2d\u53bb\u3002\uff08\u6700\u5927\u53ef\u4ee5\u7f13\u5b581000\u4e2a &waitForm items\uff09"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"func (q *delayingType) AddAfter(item interface{}, duration time.Duration) {\n    // don't add if we're already shutting down\n    if q.ShuttingDown() {\n        return\n    }\n\n    q.metrics.retry()\n\n    // immediately add things with no delay\n    if duration <= 0 {\n        q.Add(item)\n        return\n    }\n\n    select {\n    case <-q.stopCh:\n        // unblock if ShutDown() is called\n    case q.waitingForAddCh <- &waitFor{data: item, readyAt: q.clock.Now().Add(duration)}:\n    }\n}\n")),(0,r.kt)("p",null,"waitingLoop\u65b9\u6cd5\uff0c\u968f\u7740delayingType\u5b9e\u4f8b\u7684\u521b\u5efa\u800c\u542f\u52a8\uff0c\u5e76\u4e00\u76f4\u8fd0\u884c\u4e0b\u53bb\u76f4\u5230workqueue\u88abshutdown\u3002waitingLoop\u65b9\u6cd5\u4e00\u76f4\u5728\u505a\u7684\u4e8b\u60c5\u5c31\u662f \u4e0d\u505c\u7684\u5c06\u4e0a\u9762\u7684 AddAfter\u65b9\u6cd5 \u653e\u8fdb q.waitingForAddCh channel\u7684item\u53d6\u51fa\u6765\uff0c\u6839\u636eitem\u7684\u65f6\u95f4\u662f\u65e9\u4e8e\u73b0\u5728\u8fd8\u662f\u665a\u4e8e\u73b0\u5728\uff0c\u65e9\u4e8e\u73b0\u5728\u5c31\u52a0\u5165\u5de5\u4f5c\u961f\u5217\uff0c\u665a\u4e8e\u73b0\u5728\u5c31\u653e\u5230heap\u4e0a\u3002\u5e76\u4e0d\u65ad\u7684\u4eceheap pop\u51fa\u7b2c\u4e00\u4e2aitem\uff0c\u68c0\u6d4bitem\u7684\u5230\u671f\u65f6\u95f4\uff0c\u6839\u636eitem\u7684\u65f6\u95f4\u662f\u65e9\u4e8e\u73b0\u5728\u8fd8\u662f\u665a\u4e8e\u73b0\u5728\uff0c\u65e9\u4e8e\u73b0\u5728\u5c31\u52a0\u5165\u5de5\u4f5c\u961f\u5217\uff0c\u665a\u4e8e\u73b0\u5728\u5565\u4e5f\u4e0d\u505a\uff0citem\u7ee7\u7eed\u4fdd\u7559\u5728heap\u4e0a\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"func (q *delayingType) waitingLoop() {\n    defer utilruntime.HandleCrash()\n\n    // Make a placeholder channel to use when there are no items in our list\n    never := make(<-chan time.Time)\n\n    // Make a timer that expires when the item at the head of the waiting queue is ready\n    var nextReadyAtTimer clock.Timer\n\n    waitingForQueue := &waitForPriorityQueue{}\n    heap.Init(waitingForQueue)\n\n    waitingEntryByData := map[t]*waitFor{}\n\n    for {\n        // \u5982\u679c\u8be5\u5ef6\u8fdf\u961f\u5217\u5305\u542bwrap\u7684\u666e\u901a\u961f\u5217\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u5f97\u77e5\u8be5\u961f\u5217\u6b63\u5728\u88ab\u5173\u95ed\uff0c\u5219\u8df3\u51fa\u6574\u4e2awaitingLoop()\u65b9\u6cd5\n        if q.Interface.ShuttingDown() {\n            return\n        }\n\n        now := q.clock.Now()\n\n        // Add ready entries\n        for waitingForQueue.Len() > 0 {\n            entry := waitingForQueue.Peek().(*waitFor)\n            // heap\u7684\u7b2c\u4e00\u4e2aitem\u662f\u6700\u63a5\u8fd1\u5230\u671f\u65f6\u95f4\u7684\uff0c\u8be5item\u65f6\u95f4\u8fd8\u6ca1\u5230\uff0c\u5219heap\u4e0d\u52a8\uff0c\u82e5\u8be5item\u65f6\u95f4\u5df2\u5230\uff0c\u5219pop\u51fa\u6765\uff0c\u5e76\u5c06\u8be5item\u52a0\u5165workqueue\u548c\u4ece\u552f\u4e00\u65e0\u5e8fset\u96c6\u5408waitingEntryByData\u5220\u9664\u8be5item\u3002\n            if entry.readyAt.After(now) {\n                break\n            }\n\n            entry = heap.Pop(waitingForQueue).(*waitFor)\n            q.Add(entry.data)\n            delete(waitingEntryByData, entry.data)\n        }\n\n        // Set up a wait for the first item's readyAt (if one exists)\n        // nextReadyAt\u662f\u4e2a\u5b9a\u65f6\u5668\uff0cnever\u662f\u6c38\u4e0d\u5230\u671f\u7684\u5b9a\u65f6\u5668\n        nextReadyAt := never\n        //\u82e5 heeap\uff1awaitingForQueue \u8fd8\u6709item\n        if waitingForQueue.Len() > 0 {\n            // \u82e5\u5b9a\u65f6\u5668\u5728\u5de5\u4f5c\uff0c\u5219\u505c\u6b62\u6539\u8ba1\u65f6\u5668\n            if nextReadyAtTimer != nil {\n                nextReadyAtTimer.Stop()\n            }\n            entry := waitingForQueue.Peek().(*waitFor) // \u83b7\u53d6 heeap\uff1awaitingForQueue \u9996\u4e2aitem\n            nextReadyAtTimer = q.clock.NewTimer(entry.readyAt.Sub(now)) // \u83b7\u53d6\u8be5\u9996\u4e2aitem\u8fd8\u6709\u591a\u4e45\u5230\u671f\uff08\u5230\u671f\u65f6\u95f4\u51cf\u53bb\u73b0\u5728\u65f6\u95f4\uff09\uff0c\u6839\u636e\u8be5\u65f6\u95f4\u521b\u5efa\u5b9a\u65f6\u5668 nextReadyAtTimer.C()\n            nextReadyAt = nextReadyAtTimer.C() \n        }\n\n        select {\n        case <-q.stopCh:\n            return\n\n        case <-q.heartbeat.C():\n            // continue the loop, which will add ready items\n\n        case <-nextReadyAt:\n            // continue the loop, which will add ready items\n\n        case waitEntry := <-q.waitingForAddCh:\n            if waitEntry.readyAt.After(q.clock.Now()) {\n                insert(waitingForQueue, waitingEntryByData, waitEntry)\n            } else {\n                q.Add(waitEntry.data)\n            }\n\n            drained := false\n            for !drained {\n                select {\n                case waitEntry := <-q.waitingForAddCh:\n                    if waitEntry.readyAt.After(q.clock.Now()) {\n                        insert(waitingForQueue, waitingEntryByData, waitEntry)\n                    } else {\n                        q.Add(waitEntry.data)\n                    }\n                default:\n                    drained = true\n                }\n            }\n        }\n    }\n}\n")),(0,r.kt)("p",null,"\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u7684select\u65b9\u6cd5\uff0c\u6ee1\u8db3\u5fc3\u8df3\u65f6\u95f4 \u6216\u8005 pop\u540e\u7684heap\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u95f4\u5df2\u7ecf\u5230\u4e86 \u6216\u8005q.waitingForAddCh channel\u6709\u6570\u636e\uff0c\u5c31\u8fdb\u5165\u4e0b\u4e00\u6b21\u7684for\u5faa\u73af\u3002"),(0,r.kt)("p",null,"\u5176\u4e2d\uff0c\u4eceq.waitingForAddCh\u53d6\u51fa\u6570\u636e\u540e\uff0c\u6839\u636eitem\u7684\u5230\u671f\u65f6\u95f4\uff0c\u51b3\u5b9a\u662f\u653e\u5165\u5806\u4e2d\uff08item\u7684\u5230\u671f\u65f6\u95f4\u665a\u4e8e\u73b0\u5728\u7684\u65f6\u95f4\uff09\uff0c\u8fd8\u662f\u653e\u5165\u5de5\u4f5c\u961f\u5217\uff08item\u7684\u5230\u671f\u65f6\u95f4\u65e9\u4e8e\u73b0\u5728\u7684\u65f6\u95f4\uff09\u3002\u672c\u6b21\u7684\u653e\u5165\u5de5\u4f5c\u961f\u5217\u4e0d\u540c\u4e8e\u4e0a\u9762\u51e0\u884c\u7684\u653e\u5165\u5de5\u4f5c\u961f\u5217\u7684\u4ee3\u7801\uff0c\u533a\u522b\u662f\u4e0a\u6b21\u662f\u4ece\u5806\u91cc\u62ff\u51fa\u7684item\uff0c\u8fd9\u6b21\u662f\u4ecechannel\u62ff\u51fa\u7684item\u8df3\u8fc7\u4e86\u653e\u5165\u5806\u7684\u8fc7\u7a0b\u76f4\u63a5\u653e\u5165\u5de5\u4f5c\u961f\u5217\u3002\uff08\u56e0\u4e3aitem\u7684\u5230\u671f\u65f6\u95f4\u5df2\u7ecf\u665a\u4e8e\u73b0\u5728\u7684\u65f6\u95f4\uff0c\u6ca1\u5fc5\u8981\u653e\u6295\u5165\u5806\u91cc\u8fdb\u884c\u6392\u5e8f\u4e86\uff0c\u63d0\u9ad8\u6267\u884c\u6548\u7387\uff0c\u907f\u514d\u505a\u65e0\u7528\u529f\uff09"),(0,r.kt)("p",null,"for !drained \u662f\u4e3a\u4e86\u5c06 q.waitingForAddCh channel\u91cc\u7684items\u5904\u7406\u5b8c\uff0c\u5f53 drained = true \u8868\u793a\u5df2\u5904\u7406\u5b8c\u6210\u8be5channel\u7684\u5168\u90e8items\u3002"),(0,r.kt)("p",null,"insert\u65b9\u6cd5\u5f80heap\u6dfb\u52a0\u5143\u7d20\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\u3002\u82e5\u5143\u7d20\u5b58\u5728\u5219update\uff0c\u82e5\u4e0d\u5b58\u5728\uff0cpush\u8be5\u5143\u7d20\u5230heap\u4e2d\uff0c\u5e76\u5c06\u5165\u53c2\u7684 knownEntries\uff08\u5373waitingLoop\u65b9\u6cd5\u7684waitingEntryByData\uff09 set\u96c6\u5408\u6dfb\u52a0\u8be5\u5143\u7d20\u7684\u503c\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u4e0d\u91cd\u590d\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"func insert(q *waitForPriorityQueue, knownEntries map[t]*waitFor, entry *waitFor) {\n    // if the entry already exists, update the time only if it would cause the item to be queued sooner\n    existing, exists := knownEntries[entry.data]\n    if exists {\n        if existing.readyAt.After(entry.readyAt) {\n            existing.readyAt = entry.readyAt\n            heap.Fix(q, existing.index)\n        }\n\n        return\n    }\n\n    heap.Push(q, entry)\n    knownEntries[entry.data] = entry\n}\n")))}s.isMDXComponent=!0}}]);