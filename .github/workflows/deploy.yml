# name: Deploy to GitHub Pages

# on:
#   push:
#     branches:
#       - main
#     # Review gh actions docs if you want to further define triggers, paths, etc
#     # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#on

# permissions:
#   contents: write

# jobs:
#   deploy:
#     name: Deploy to GitHub Pages
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-node@v3
#         with:
#           node-version: 18
#           cache: yarn

#       - name: Install dependencies
#         run: yarn install --frozen-lockfile
#       - name: Build website
#         run: yarn build

#       # Popular action to deploy to GitHub Pages:
#       # Docs: https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-docusaurus
#       - name: Deploy to GitHub Pages
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           # Build output to publish to the `gh-pages` branch:
#           publish_dir: ./build
#           # The following lines assign commit authorship to the official
#           # GH-Actions bot for deploys to `gh-pages` branch:
#           # https://github.com/actions/checkout/issues/13#issuecomment-724415212
#           # The GH actions bot is used by default if you didn't specify the two fields.
#           # 你可以用自己的用户信息替换它们。
#           user_name: hanwei
#           user_email: pyartist@outlook.com

name: Deploy to GitHub Pages

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # checkout && nodejs 
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '18'

      - run: yarn install && npm run build
      
      # delopy
      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
      # - run: git checkout -b gh-pages origin/gh-pages
      - name: echo exclude list
        run: |
          echo ".git" > exclude.list
      - name: Deploy to Server # 第二步，rsync推文件
        uses: AEnterprise/rsync-deploy@v1.0 # 使用别人包装好的步骤镜像
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }} # 引用配置，SSH私钥
          ARGS: -avz --exclude-from=exclude.list
          SERVER_PORT: "22" # SSH端口
          # FOLDER: ./ # 要推送的文件夹，路径相对于代码仓库的根目录
          FOLDER: ./build/ # 要推送的文件夹，路径相对于代码仓库的根目录
          SERVER_IP: ${{ secrets.SSH_HOST }} # 引用配置，服务器的host名（IP或者域名domain.com）
          USERNAME: root # 引用配置，服务器登录名
          SERVER_DESTINATION: /usr/share/nginx/html/backendcloud/www/ # 部署到目标文件夹
      - name: 登录阿里云删除不用文件 # 第三步，重启服务
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }} # 下面三个配置与上一步类似
          username: root
          key: ${{ secrets.DEPLOY_KEY }}
          # 重启的脚本，根据自身情况做相应改动，一般要做的是migrate数据库以及重启服务器
          script: |
            rm -rf /usr/share/nginx/html/backendcloud/www/.git*